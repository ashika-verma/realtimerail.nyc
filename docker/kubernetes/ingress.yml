apiVersion: extensions/v1beta1

kind: Ingress

metadata:
  name: k8s.realtimerail.nyc-transiter
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header 'Access-Control-Allow-Origin' '*' always;
      proxy_set_header X-Transiter-Host "https://www.realtimerail.nyc/transiter/v1";
      proxy_set_header X-Transiter-PermissionsLevel "ADMIN_READ";
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  tls:
  - hosts:
    - k8s.realtimerail.nyc
    secretName: letsencrypt-prod--k8s.realtimerail.nyc
  rules:
    - host: k8s.realtimerail.nyc
      http:
        paths:
          - backend:
              serviceName: transiter-webservice
              servicePort: 80
            path: /transiter/v0.4(/|$)(.*)

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: k8s.realtimerail.nyc-frontend
  annotations:
spec:
  rules:
    - host: k8s.realtimerail.nyc
      http:
        paths:
          - backend:
              serviceName: frontend
              servicePort: 80

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: demo.transiter.io
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Transiter-Host "https://demo.transiter.io";
    #  proxy_set_header X-Transiter-PermissionsLevel "ADMIN_READ";
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  tls:
  - hosts:
    - demo.transiter.io
    secretName: letsencrypt-prod
  rules:
    - host: demo.transiter.io
      http:
        paths:
          - backend:
              serviceName: transiter-webservice
              servicePort: 80

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: transiter.io
  annotations:
    nginx.ingress.kubernetes.io/from-to-www-redirect: "True"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($host = 'transiter.io' ) {
        return 301 http://www.transiter.io$request_uri;
      }
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  tls:
  - hosts:
    - www.transiter.io
    - transiter.io
    secretName: letsencrypt-prod--transiter.io
  rules:
  - host: www.transiter.io
    http:
      paths:
      - backend:
          serviceName: transiter-webservice
          servicePort: 80
  - host: transiter.io

---

apiVersion: extensions/v1beta1

kind: Ingress

metadata:
  name: docs.transiter.io
  annotations:
    nginx.ingress.kubernetes.io/app-root: /docs
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  tls:
  - hosts:
    - docs.transiter.io
    secretName: letsencrypt-prod--docs.transiter.io
  rules:
    - host: docs.transiter.io
      http:
        paths:
          - backend:
              serviceName: transiter-webservice
              servicePort: 80
            path: /docs
